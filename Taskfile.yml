version: '3'


vars:
    DOCKER_REMOTE: ishan27g/ryo-faas
    IMAGE_AGENT: rfa-agent.v0.1
    IMAGE_PROXY: rfa-proxy.v0.1
    IMAGE_DATABASE: rfa-database.v0.1

tasks:

  # cleanup test dirs/
  testCleanup:
    cmds:
      - rm -rf ./agent/registry/deploy/
      - rm -rf ./database/handler/ok*
      # - c
  test:
    cmds:
      - defer: { task: testCleanup }
      - go test --v ./...
  test-ci:
    cmds:
      - go test --v ./...
  nats:
    cmds:
      - docker compose run --service-ports --rm nats

  # run database
  database:
    dir: database
    cmds:
      - go run main.go

  # run proxy
  proxy:
    dir: proxy
    cmds:
      - go run main.go -agents :9000
  
  # run agent
  agent:
    dir: agent
    cmds:
      - go run main.go

  # run database events example
  examples-db:
     dir: examples/database-events
     cmds:
      - go run main.go subscribe.go
  
  # test database events example 
  examples-db-test:
    cmds:
      - curl http://localhost:9999/pay
      - sleep 2 && echo 'getting'
      - curl http://localhost:9999/get

  imgProxy:
    cmds:
     - docker build -f proxy.dockerfile -t {{.DOCKER_REMOTE}}:{{.IMAGE_PROXY}} .
  imgAgent:
    cmds:
      - docker build -f agent.dockerfile -t {{.DOCKER_REMOTE}}:{{.IMAGE_AGENT}} .
  imgDb:
    cmds:
      - docker build -f db.dockerfile -t {{.DOCKER_REMOTE}}:{{.IMAGE_DATABASE}} .
  buildImages:
      cmds:
        - task: imgAgent
        - task: imgDb
        - task: imgProxy

  pushImages:
      cmds:
        - docker push {{.DOCKER_REMOTE}}:{{.IMAGE_PROXY}}
        - docker push {{.DOCKER_REMOTE}}:{{.IMAGE_AGENT}}
        - docker push {{.DOCKER_REMOTE}}:{{.IMAGE_DATABASE}}
