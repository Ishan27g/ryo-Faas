version: '3'

env:
  JAEGER: localhost
  DATABASE: localhost:5000
  NATS: nats://localhost:4222
  RYO_FAAS: /Users/ishan/Documents/Drive/golang/ryo-Faas

vars:
  DOCKER_REMOTE: ishan27g/ryo-faas
  IMAGE_PROXY: rfa-proxy.v0.1
  IMAGE_DATABASE: rfa-database.v0.1
  IMAGE_DEPLOY_BASE: rfa-deploy-base.v0.1

tasks:

  # cleanup test dirs/
  testCleanup:
    cmds:
      - rm -rf ./database/handler/ok*
  test:
    cmds:
      - defer: { task: testCleanup }
      - go test --v ./...
  test-ci:
    cmds:
      - go test --v ./...

  # run in docker
  prometheus:
    cmds:
      - cd .dockerfiles && docker compose run --service-ports --rm prometheus
  nats:
    cmds:
      - cd .dockerfiles && docker compose run --service-ports --rm nats
  jaeger:
    cmds:
      - cd .dockerfiles && docker compose run --service-ports --rm jaeger
  zipkin:
    cmds:
      - cd .dockerfiles && docker compose run --service-ports --rm zipkin

  # run local

  # run database
  database:
    dir: database
    cmds:
      - go run main.go
  # run proxy
  proxy:
    dir: proxy
    cmds:
      - go run main.go

  # build & push
  # call via go to run in parallel
  metaGolangTask:
    cmds:
      - go run .dockerfiles/taskFile.go -buildImages
      - go run .dockerfiles/taskFile.go -pushImages
  imgProxy:
    cmds:
      - docker build -f .dockerfiles/proxy.dockerfile -t {{.DOCKER_REMOTE}}:{{.IMAGE_PROXY}} .
  imgDb:
    cmds:
      - docker build -f .dockerfiles/db.dockerfile -t {{.DOCKER_REMOTE}}:{{.IMAGE_DATABASE}} .
  imgDeployBase:
    cmds:
      - docker build -f .dockerfiles/deploy-base.dockerfile -t {{.DOCKER_REMOTE}}:{{.IMAGE_DEPLOY_BASE}} .
  pushImages:
    cmds:
      - docker push {{.DOCKER_REMOTE}}:{{.IMAGE_PROXY}}
      - docker push {{.DOCKER_REMOTE}}:{{.IMAGE_DATABASE}}
      - docker push {{.DOCKER_REMOTE}}:{{.IMAGE_DEPLOY_BASE}}

#  runLocal:
#    cmds:
#      - open -a terminal .dockerfiles/database.sh
#      - open -a terminal .dockerfiles/nats.sh
#      - open -a terminal .dockerfiles/jaeger.sh
#      - open -a terminal .dockerfiles/proxy.sh